/* ==========================================================================
	Variables
============================================================================= */

	@root_font_size: 16;

	@base_transition_duration: 0.25s;
	@base_transition_timing: linear;
	@base_transition_delay: 0s;

	// Width Media Queries

	@min_sm:      ~"only screen and (min-width:" (@mq_min_sm * 1px) + ~")";
	@min_md:      ~"only screen and (min-width:" (@mq_min_md * 1px) + ~")";
	@min_lg:      ~"only screen and (min-width:" (@mq_min_lg * 1px) + ~")";
	@min_xl:      ~"only screen and (min-width:" (@mq_min_xl * 1px) + ~")";

	@max_sm:      ~"only screen and (max-width:" (@mq_min_sm - 1px) + ~")";
	@max_md:      ~"only screen and (max-width:" (@mq_min_md - 1px) + ~")";
	@max_lg:      ~"only screen and (max-width:" (@mq_min_lg - 1px) + ~")";
	@max_xl:      ~"only screen and (max-width:" (@mq_min_xl - 1px) + ~")";

	@and_max_sm:  ~"and (max-width:" (@mq_min_sm - 1px) + ~")";
	@and_max_md:  ~"and (max-width:" (@mq_min_md - 1px) + ~")";
	@and_max_lg:  ~"and (max-width:" (@mq_min_lg - 1px) + ~")";
	@and_max_xl:  ~"and (max-width:" (@mq_min_xl - 1px) + ~")";

	@and_min_height_lg:  ~"and (min-height: 825px)";
	@and_min_height_xl:  ~"and (min-height: 950px)";

	// Other

	@margin_sm: 30px;
	@margin_md: 50px;
	@margin_lg: 60px;
	@margin_xl: 90px;

	@sprite_width:  500px;
	@sprite_height: 134px;


/* ==========================================================================
	Colors
============================================================================= */

	@white_true: #fff;
	@white_light: fade(@white_true, 60);
	@black_true: #000;
	@black: #0B0704;
	@black_light: fade(@black, 20);

	@gray_pale: #F7F8F6;
	@gray_light: #D8D8D8;
	@gray_medium: #9B9B9B;
	@gray_medium_fade: fade(@gray_dark, 20);
	@gray: #979797;
	@gray_dark: #6A6764;

	@red: #7F1028;
	@teal: #269596;
	@orange: #F09920;
	@purple: #3B1D42;

	/* Background Colors
	============================================================================= */

	.background_white_true {
		background: @white_true;
	}

	.background_black_true {
		background: @black_true;
	}

	.background_gray_pale {
		background: @gray_pale;
	}


	/* Text Colors
	============================================================================= */

	.color_white_true{
		color: @white_true;
	}

	.color_white_light {
		color: @white_light;
	}

	.color_black_true {
		color: @black_true;
	}

	.color_black {
		color: @black;
	}

	.color_black_light {
		color: @black_light;
	}

	.color_gray_pale {
		color: @gray_pale;
	}

	.color_gray_light {
		color: @gray_light;
	}

	.color_gray_medium {
		color: @gray_medium;
	}

	.color_gray_medium_fade {
		color: @gray_medium;
	}

	.color_gray {
		color: @gray;
	}

	.color_gray_dark {
		color: @gray_dark;
	}

	.color_red {
		color: @red;
	}

	.color_teal {
		color: @teal;
	}

	.color_orange {
		color: @orange;
	}

	.color_purple {
		color: @purple;
	}

	/* Border Colors
	============================================================================= */

	.border_black_light {
		border-color: @black_light;
	}

	.border_gray {
		border-color: @gray;
	}

	.border_gray_medium {
		border-color: @gray_medium;
	}

	.border_gray_light {
		border-color: @gray_light;
	}


/* ==========================================================================
	Mixins
============================================================================= */

	.transition(@duration:0.25s, @timing:linear, @delay:0) {
		transition:
			background-color @duration @timing,
			border-color @duration @timing,
			box-shadow @duration @timing,
			color @duration @timing,
			opacity @duration @timing;
	}

	.transition_link(@duration:0.25s, @timing:linear, @delay:0) {
		&,
		&:link,
		&:visited,
		&:hover,
		&:active,
		&:focus {
			.transition(@duration, @timing, @delay)
		}
	}

	.font_size(@px_size) {
		@px: @px_size;
		@rem: (@px_size / @root_font_size);
		font-size: ~"@{px}px";
		font-size: ~"@{rem}rem";
	}

	.size(@width:0, @height:@width) {
		width: ~"@{width}px";
		height: ~"@{height}px";
	}

	.line_height(@lineHeight, @fontSize:@lineHeight) {
		line-height: (@lineHeight / @fontSize);
	}

	.rgba_background(@base, @alpha) {
		background-color: rgba(red(@base), green(@base), blue(@base), @alpha);
	}

	.rgba_text(@base, @alpha) {
		color: rgba(red(@base), green(@base), blue(@base), @alpha);
	}

	// 1. Autoprefixer does not prefix correctly
	// 2. IE 10/11 uses a non-standard

	.columns(@count, @gap) {
		column-count: @count;
		column-gap: @gap;

		& > * {
			-webkit-column-break-inside: avoid; // 1
			column-break-inside: avoid;
			break-inside: avoid; // 2
		}
	}

	.icon_sprite(@left:0, @top:0) {
		background: url(../images/icons.png) no-repeat @left @top;

		.svg & {
			background-image: url(../images/icons.svg);
		}
	}

	.scale_sprite(@percent:1, @imageOffsetX:0, @imageOffsetY:0) {
		background-size: floor(@sprite_width * @percent) floor(@sprite_height * @percent);
		background-position: floor(@imageOffsetX * @percent) floor(@imageOffsetY * @percent);
	}

	.icon_indent() {
		overflow: hidden;
		text-indent: 200%;
		white-space: nowrap;
	}

	.cover() {
		height: 100%;
		width: 100%;

		position: absolute;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
	}

	.bleed() {
		height: 102%;
		width: 102%;

		position: absolute;
		top: -1%;
		right: -1%;
		bottom: -1%;
		left: -1%;
	}

	/**
	 * Cover Image:
	 *
	 * Use on wrapping element of img (<figure>, <picture>)
	 * Will work like background-size: cover; but with static images
	 * Won't scale it down though, so good to use with picturefill
	 */

	.cover_image() {
		position: relative;

		z-index: 1;

		img {
			width: auto;
			height: auto;

			position: absolute;
			top: 50%;
			left: 50%;

			min-width: 100% !important;
			min-height: 100% !important;
			transform: translate(-50%, -50%);
			z-index: 0;
		}
	}

	.center() {
		position: absolute;
		top: 50%;
		left: 50%;

		transform: translate(-50%, -50%);
	}

	.center_vertical() {
		position: absolute;
		top: 50%;

		transform: translateY(-50%);
	}

	.absolute_center_parent() {
		position: relative;
	}

	.absolute_center() {
		position: absolute;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;

		margin: auto;
	}

	.text_indent(@height: 0) {
		display: block;
		line-height: @height;
		overflow: hidden;
		text-indent: 100%;
	}

	.ellipsis() {
		overflow: hidden;
		text-overflow: ellipsis;
		white-space: nowrap;
	}

	// 1. Filter for <= IE 9, does not work on pseudo elements

	.gradient_vertical(@startColor: black, @endColor: white) {
		background-color: @startColor;
		background: linear-gradient(to bottom, @startColor, @endColor);

		@ieStartColor: argb(@startColor);
		@ieEndColor:   argb(@endColor);

		filter: ~"progid:DXImageTransform.Microsoft.gradient(startColorstr='@{ieStartColor}', endColorstr='@{ieEndColor}', GradientType=0)"; // 1
	}

	// 1. Filter for <= IE 9, does not work on pseudo elements

	.gradient_horizontal(@startColor: black, @endColor: white) {
		background-color: @startColor;
		background: linear-gradient(to right, @startColor, @endColor);

		@ieStartColor: argb(@startColor);
		@ieEndColor:   argb(@endColor);

		filter: ~"progid:DXImageTransform.Microsoft.gradient(startColorstr='@{ieStartColor}', endColorstr='@{ieEndColor}', GradientType=1)"; // 1
	}

	.gradient_red() {
		background-image: radial-gradient(50% 72%, #B62551 0%, #7F1028 73%);
		border-radius: 4px;
	}

	.gradient_teal() {
		background-image: radial-gradient(49% 94%, #43C0C1 0%, #208C8E 95%);
		border-radius: 4px;
	}

	.gradient_purple() {
		background-image: radial-gradient(51% 88%, #6D3E77 0%, #3B1D42 89%);
	}

	.gradient_gray() {
		background-image: radial-gradient(50% 80%, #ABBEC9 0%, #738998 81%);
	}

	.rgba_raw(@base, @alpha) {
		@return: rgba(red(@base), green(@base), blue(@base), @alpha);
	}

	.font_smoothing {
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
	}

	.killFlicker {
		-webkit-font-smoothing: auto;
		transform: translateZ(0);
	}

	.triangle_right(@width: 6, @height: 5, @margin-top: 5, @transition: transform, @color: @white_true) {
		.relative;

		padding-right: 6px + @width;

		&:after {
			.size(0);
			.absolute;

			border-top:    ~"@{height}px" solid transparent;
			border-bottom: ~"@{height}px" solid transparent;
			border-left:   ~"@{width}px" solid @color;
			content: '';
			display: inline-block;
		}
	}

	.transition_hide {
		opacity: 0;
		transition: opacity @base_transition_duration linear,
					visibility @base_transition_duration linear;
		visibility: hidden;
	}

	.transition_show {
		opacity: 1;
		visibility: visible;
	}

	.hide_lg {
		@media @min_lg {
			display: none;
		}
	}

	/* Arrow
	============================================================================= */

	.arrow(@width: 8, @height: @width, @thickness: 3, @color: #FFF, @position: relative) {
		position: @position;

		&:before,
		&:after {
			width: ~"@{width}px";
			height: ~"@{height}px";

			display: inline-block;
			border: ~"@{thickness}px" solid @color;
			border-bottom: none;
			margin: ~"-@{thickness}px" auto 0;
			vertical-align: middle;
		}
	}

	.arrow_right(@width: 8, @height: @width, @thickness: 3, @color: #FFF, @position: relative) {
		.arrow(@width, @height, @thickness, @color, @position);

		&:after {
			border-left: none;
			content: "";
			transform: translateX(-25%) rotateZ(45deg) perspective(1px);
			-ms-transform: translateX(-25%) rotate(45deg);
		}
	}

	.arrow_left(@width: 8, @height: @width, @thickness: 3, @color: #FFF, @position: relative) {
		.arrow(@width, @height, @thickness, @color, @position);

		&:before {
			border-right: none;
			content: "";
			transform: translateX(25%) rotateZ(-45deg) perspective(1px);
			-ms-transform: translateX(25%) rotate(-45deg);
		}
	}

	.arrow_up(@width: 8, @height: @width, @thickness: 3, @color: #FFF, @position: relative) {
		.arrow(@width, @height, @thickness, @color, @position);

		&:after {
			border-left: none;
			content: "";
			transform: translateX(25%) rotateZ(-45deg) perspective(1px);
			-ms-transform: translateX(25%) rotate(-45deg);
		}
	}

	.arrow_down(@width: 8, @height: @width, @thickness: 3, @color: #FFF, @position: relative) {
		.arrow(@width, @height, @thickness, @color, @position);

		&:after {
			border-right: none;
			content: "";
			transform: translateX(25%) rotateZ(-135deg) perspective(1px);
			-ms-transform: translateX(25%) rotate(-135deg);
		}
	}

	.inset_small {
		padding-right: 20px;
		padding-left: 20px;
	}

	.outset_small {
		margin-right: -20px;
		margin-left: -20px;
	}